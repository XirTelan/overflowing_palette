var e=Object.defineProperty,t=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);import{p as s}from"./phaser-C2RWnc_5.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var i=(e=>(e[e.red=0]="red",e[e.green=1]="green",e[e.blue=2]="blue",e[e.yellow=3]="yellow",e[e.purple=4]="purple",e[e.cyan=5]="cyan",e))(i||{}),n=(e=>(e[e.Waiting=0]="Waiting",e[e.Active=1]="Active",e))(n||{});class o{constructor(e,s,i,n,o=0){t(this,"tile"),t(this,"transitionTile"),t(this,"color"),t(this,"colors"),t(this,"grid"),t(this,"pos"),this.color=n,this.grid=e;const{cellSize:a,scene:r}=e,{colors:c}=r.cache.json.get("config");this.colors=c,this.tile=r.add.shader("base",i*(a+o),s*(a+o),a,a,["celltexture","cellnoise","cellnoise_d","cellnoise_center"]).setOrigin(0,0),this.tile.setUniform("color.value",c[n]),this.tile.setInteractive(),this.tile.on("pointerdown",this.onClick,this),this.tile.on("pointerover",this.onEnter,this),this.tile.on("pointerout",this.onLeave,this),this.pos={x:s,y:i};const l=r.add.shader("base",this.tile.x+a/2,this.tile.y+a/2,a,a);l.setUniform("color.value",{x:.949,y:.953,z:.827}),l.setUniform("active.value",1),l.setUniform("transparent.value",1),l.setVisible(!1),this.transitionTile=l}onEnter(){this.tile.setUniform("active.value",1)}onLeave(){this.tile.setUniform("active.value",0)}onClick(){this.grid.cellAction(this.pos.x,this.pos.y,this.color)}setColor(e){this.color=e,this.tile.setUniform("color.value",this.colors[e])}}const a=[[1,0],[-1,0],[0,1],[0,-1]],r=e=>Phaser.Display.Color.GetColor(255*e.x,255*e.y,255*e.z);function c(e,t){const s=Object.keys(i).length/2;return((t+e)%s+s)%s}function l(e){const t=i[e];return`${t[0].toUpperCase()}${t.slice(1)}`}class h{constructor(e,s){var i,n;t(this,"scene"),t(this,"container"),t(this,"transitionSpeed",800),t(this,"transitionSpeedMinimum",50),t(this,"pendingCalls",0),t(this,"board",[]),t(this,"cellSize"),t(this,"defaultValues"),t(this,"history"),t(this,"border"),this.scene=e,this.defaultValues=s;const a=s.length,r=s[0].length,c=[],{gridOptions:l}=e.cache.json.get("config").game;this.transitionSpeed=l.transition.default,this.transitionSpeedMinimum=l.transition.minimum;const h=Math.min((l.height-l.gap*(a-1))/a,(l.width-l.gap*(r-1))/r);this.cellSize=h;const d=l.width-l.borderPadding-r*(h+l.gap),g=l.height-l.borderPadding-a*(h+l.gap);this.border=e.add.nineslice(l.borderOffset.left,l.borderOffset.top,"grid_border",void 0,l.width-l.borderOffset.right-d,l.height-l.borderOffset.bottom-g,270,128,l.height/2.56,l.height/3).setOrigin(0,0).setTint(this.getColor()),null==(i=this.border.postFX)||i.addShine(.2,1,4);for(let t=0;t<a;t++)for(let e=0;e<r;e++){this.scene.gameStates.availableColors.add(s[t][e]);const i=new o(this,t,e,s[t][e],l.gap);c.push(i.tile),c.push(i.transitionTile),(n=this.board)[t]??(n[t]=[]),this.board[t][e]=i,s[t][e]!==this.scene.gameStates.targetColor&&(this.scene.gameStates.remains++,this.scene.gameStates.initialState.remains++)}this.container=this.scene.add.container(this.scene.cameras.main.width/2-l.width/2-l.offset.x,l.offset.y,[this.border,...c])}bfs(e,t,s,i,o,r,c){if(!this.board[e]||!this.board[e][t]||this.board[e][t].color==i||this.board[e][t].color!=s||o.has(this.board[e][t]))return;const{colors:l}=this.scene.cache.json.get("config");this.pendingCalls++;const h=this.board[e][t],d=this.board[e][t].tile;o.add(h);const g=h.transitionTile,u=this.transitionSpeedMinimum,m=Math.max(this.transitionSpeed*Math.pow(.8,r),u);this.scene.tweens.chain({targets:null,tweens:[{targets:d,x:{value:()=>d.x+Phaser.Math.Between(-5,5),duration:.1*m,repeat:1},y:{value:()=>d.y+Phaser.Math.Between(-5,5),duration:.1*m,repeat:1},onComplete:()=>{g.setVisible(!0).setDepth(10)},repeat:0,yoyo:!0,ease:"Sine.easeInOut"},{targets:g,alpha:.8,duration:m/2-10,repeat:0,scale:1.2,ease:"Linear"},{targets:g,alpha:0,scale:1.4,duration:m/2-10,repeat:0,ease:"Linear"}],onComplete:()=>{g.setVisible(!1),g.scale=1},delay:0,loop:0}),this.scene.tweens.addCounter({from:0,to:1,delay:.1*m,duration:m,ease:"Cubic.InOut",repeat:0,onStart:()=>{this.scene.sound.play("tileFlip",{detune:150*r}),this.board[e][t].tile.setUniform("colorToTransform.value",l[i]),this.board[e][t].tile.setUniform("curPoint.value",{x:e,y:t}),this.board[e][t].tile.setUniform("startPoint.value",c)},onUpdate:s=>{this.board[e][t].tile.setUniform("transition.value",s.getValue())},onComplete:()=>{this.board[e][t].tile.scale=1,this.board[e][t].tile.depth=1,this.board[e][t].tile.setUniform("transition.value",0),this.board[e][t].tile.setUniform("color.value",l[i]),this.board[e][t].color===this.scene.gameStates.targetColor&&this.scene.gameStates.remains++,this.board[e][t].color=Number(i),this.board[e][t].color===this.scene.gameStates.targetColor&&(this.scene.gameStates.remains-=1),this.pendingCalls--,0===this.pendingCalls&&this.scene.changeGameState(n.Active)}});for(const[n,p]of a)this.scene.time.delayedCall(m,(()=>{this.bfs(e+n,t+p,s,i,o,r+1,c)}))}flip(e,t,s){s!=this.scene.gameStates.selectedColor&&(this.scene.changeGameState(n.Waiting),this.bfs(e,t,s,this.scene.gameStates.selectedColor,new Set,0,{x:e,y:t}))}cellAction(e,t,s){if("Play"==this.scene.gameStates.mode){if(this.scene.gameStates.state===n.Waiting)return;this.flip(e,t,s)}else this.changeColor(e,t)}changeColor(e,t){const{colors:s}=this.scene.cache.json.get("config");this.board[e][t].tile.setUniform("color.value",s[this.scene.gameStates.selectedColor]),this.board[e][t].color=Number(this.scene.gameStates.selectedColor)}getColor(){const{colors:e}=this.scene.cache.json.get("config"),{x:t,y:s,z:i}=e[this.scene.gameStates.targetColor];return Phaser.Display.Color.GetColor(255*t,255*s,255*i)}updateBorderTint(){this.border.clearTint(),this.border.setTint(this.getColor())}resetBoard(){const e=this.defaultValues,t=e.length,s=e[0].length;for(let i=0;i<t;i++)for(let t=0;t<s;t++)this.board[i][t].setColor(e[i][t])}}const d={1:"NUMPAD_ONE,ONE",2:"NUMPAD_TWO,TWO",3:"NUMPAD_THREE,THREE",4:"NUMPAD_FOUR,FOUR",5:"NUMPAD_FIVE,FIVE",6:"NUMPAD_SIX,SIX",7:"NUMPAD_SEVEN,SEVEN",8:"NUMPAD_EIGHT,EIGHT",9:"NUMPAD_NINE,NINE"};class g{constructor(e,s,i,n,o,a,r){var c;t(this,"scene"),t(this,"gameObject"),t(this,"color"),t(this,"active"),t(this,"pointer"),this.scene=e;const l=this.scene.add.circle(s,i,n/2+5,16053492).setVisible(!1);this.active=l;const h=this.scene.add.triangle(l.x+n/2+20,10,s-5,i,s+10,i+10,s+10,i-10,16777215),g=this.scene.add.shader("base",s,i,n,n),u=this.scene.make.image({x:s,y:i+n/2,key:"uiatlas",frame:"hotkey_btn",scale:.25}),m=this.scene.make.text({x:s,y:u.y,text:`${a}`,style:{color:"#3e3e3e",font:"20px OpenSans_Bold"}}).setOrigin(.5,.5);r&&(r.add(l),r.add(g),r.add(u),r.add(m),r.add(h)),g.setUniform("color.value",o[1]),g.setUniform("radius.value",.5),g.setChannel0("celltexture"),g.setInteractive(),g.on("pointerdown",this.onClick,this),g.on("pointerover",this.onEnter,this),g.on("pointerout",this.onLeave,this);const p=null==(c=this.scene.input.keyboard)?void 0:c.addKeys(d[a]);if(p)for(const t of Object.keys(p))p[t].on("down",this.onClick,this);this.scene.tweens.add({targets:h,duration:1e3,x:"+=10",yoyo:!0,repeat:-1}),this.color=o,this.gameObject=g,this.pointer=h,this.update()}onEnter(){this.scene.sound.play("mouseOver"),this.active.setVisible(!0)}onLeave(){Number(this.scene.gameStates.selectedColor)!=Number(this.color[0])&&this.active.setVisible(!1)}update(){Number(this.scene.gameStates.selectedColor)===Number(this.color[0])?(this.active.setVisible(!0),this.pointer.setVisible(!0)):(this.active.setVisible(!1),this.pointer.setVisible(!1))}onClick(){this.scene.changeSelectedColor(this.color[0]),this.scene.sound.play("colorSelect")}}class u{constructor(e,s,i,n,o,a,r){t(this,"scene"),t(this,"leftButton"),t(this,"rightButton"),t(this,"container"),t(this,"text"),t(this,"value"),this.scene=e,this.container=e.add.container(s,i),this.value=o,this.leftButton=this.createButton(a,{x:-n/2,y:0,scale:.3,angle:180}),this.rightButton=this.createButton(r,{x:n/2,y:0,scale:.3,angle:0}),this.text=e.make.text({x:0,y:0,text:String(this.value),style:{color:"#ffffff",font:"20px OpenSans_Regular"}}).setOrigin(.5,.5),this.container.add([e.add.rectangle(0,0,n,50,1710876,.6),e.add.circle(-n/2,0,25,1710876,.6),e.add.circle(n/2,0,25,1710876,.6),this.leftButton,this.text,this.rightButton])}createButton(e,t){const s=this.scene.add.container(t.x,0),i=this.scene.add.image(0,0,"uiatlas","arrow").setRotation(Phaser.Math.DegToRad(t.angle)).setScale(t.scale),n=this.scene.add.image(0,0,"uiatlas","arrow_over").setRotation(Phaser.Math.DegToRad(t.angle)).setScale(t.scale);return n.setVisible(!1),i.setInteractive(),i.on("pointerdown",(()=>{this.text.setText(String(e()))})),i.on("pointerover",(()=>{n.setScale(.35),n.setVisible(!0)})),i.on("pointerout",(()=>{n.setScale(.3),n.setVisible(!1)})),s.add([i,n]),s}}class m{constructor(e,s,i){t(this,"scene"),t(this,"container"),this.scene=i,this.container=i.add.container(e,s)}hide(){this.container.setVisible(!1)}show(){this.container.setVisible(!0)}}class p extends m{constructor(e,s,i,n,o,a,r,c){super(e,s,a),t(this,"btn"),t(this,"text"),t(this,"overlay"),this.btn=a.add.nineslice(0,0,"uiatlas","primary",n,o,157,55).setOrigin(.5,.5).setScale(.7),this.overlay=a.add.nineslice(0,0,"uiatlas","primary_over",n,o,157,55).setOrigin(.5,.5).setScale(.7),this.overlay.setVisible(!1),this.btn.setInteractive(),r&&this.btn.on("pointerdown",r,c),this.btn.on("pointerover",this.onEnter,this),this.btn.on("pointerout",this.onLeave,this),this.text=a.make.text({x:this.btn.x,y:this.btn.y,text:i,style:{color:"#000000",font:"24px OpenSans_Regular"}}).setOrigin(.5,.5),this.container.add([this.btn,this.overlay,this.text])}onEnter(){this.scene.input.setDefaultCursor("pointer"),this.overlay.setVisible(!0)}onLeave(){this.overlay.setVisible(!1),this.scene.input.setDefaultCursor("default")}}class f{constructor(e){t(this,"viewBox"),t(this,"copyBtnString"),t(this,"copyBtnJson"),t(this,"openButton"),t(this,"isOpen"),t(this,"scene"),this.openButton=new p(160,320,"Export",250,50,e,(()=>this.open())),this.scene=e}copyToClipboard(e){navigator.clipboard.writeText(e),this.viewBox.destroy(),this.copyBtnString.container.destroy(),this.copyBtnJson.container.destroy()}open(){this.isOpen||(this.isOpen=!0,this.render())}close(){this.isOpen=!1}render(){const e=this.scene,t=e.grid.board.map((e=>e.map((e=>e.color)))),s={targetColor:e.gameStates.targetColor,turns:e.gameStates.turns,board:t},i=JSON.stringify(s,null,"\t"),n=btoa(JSON.stringify(s,null));this.viewBox=e.add.dom(e.cameras.main.width/2-8,e.cameras.main.height/2-100,"pre",{width:"800px",height:"800px",background:"#121212",fontSize:"24px",padding:"10px",overflow:"auto"}),this.copyBtnJson=new p(e.cameras.main.width/2+200,920,"Copy JSON",400,50,e,(()=>{this.copyToClipboard(i),this.isOpen=!1})),this.copyBtnString=new p(e.cameras.main.width/2-200,920,"Copy STRING",400,50,e,(()=>{this.copyToClipboard(n),this.isOpen=!1})),this.copyBtnJson.container.setScale(1.4),this.copyBtnString.container.setScale(1.4),this.viewBox.setText(`${n} \n\n ${i}`)}}class x{constructor(e,s){t(this,"scene"),t(this,"graphics"),t(this,"selectionBox"),t(this,"selectedObjects",[]),t(this,"isSelecting",!1),t(this,"startX"),t(this,"startY"),t(this,"objectList"),this.scene=s;const{selectionBox:i}=s.cache.json.get("config").game;this.graphics=s.add.graphics(i),this.objectList=e.flat(),s.input.on("pointerdown",this.onPointerDown,this),s.input.on("pointermove",this.onPointerMove,this),s.input.on("pointerup",this.onPointerUp,this)}onPointerDown(e){this.isSelecting=!0,this.startX=e.x,this.startY=e.y,this.selectionBox=new Phaser.Geom.Rectangle(this.startX,this.startY,0,0)}onPointerMove(e){this.isSelecting&&(this.selectionBox.width=e.x-this.startX,this.selectionBox.height=e.y-this.startY,this.redrawSelectionBox())}onPointerUp(){this.isSelecting=!1,this.graphics.clear(),this.selectedObjects=[];const e=this.selectionBox;if(!e)return;e.x=Math.min(e.x,e.x+e.width),e.width=Math.abs(e.width),e.y=Math.min(e.y,e.y+e.height),e.height=Math.abs(e.height);const t=this.scene.grid.cellSize/2;this.objectList.forEach((s=>{const{x:i,y:n}=s.tile.getWorldPoint();i+t>e.x&&i+t<e.x+e.width&&n+t>e.y&&n+t<e.y+e.height&&s.onClick()}))}redrawSelectionBox(){this.graphics.clear().fillRectShape(this.selectionBox)}}class y extends m{constructor(e,s,i){super(i.cameras.main.width/2-e/2,i.cameras.main.height/2-s/2,i),t(this,"scene"),t(this,"nextLevelData"),this.scene=i,i.gameStates.state=n.Waiting;const o=this.scene.gameStates.levelKey;this.saveRecordAboutLevel(o);const a=new Date(i.time.now-i.startTime).toISOString().slice(11,19);this.container.add([i.add.rectangle(0,0,e,s,0,.95).setOrigin(0),i.add.rectangle(0,0,e,50,16777215,.95).setOrigin(0),i.make.text({x:e/2,y:10,text:"CLEARED",style:{color:"#000",font:"32px OpenSans_Bold"}}).setOrigin(.5,0),i.make.text({x:10,y:70,text:`Time elapsed: ${a} `,style:{color:"#fff",font:"32px OpenSans_Bold"}}),new p(e/2-110,s-33,"Main Menu",300,50,this.scene,(()=>{this.scene.scene.start("MainMenu")})).container]),o&&this.findNextLevel()&&this.createNextLevelBtn(e/2+110,s-33)}saveRecordAboutLevel(e){const t=localStorage.getItem("clearedLevels");let s;if(t){const e=JSON.parse(t);s=new Set(e)}else s=new Set;s.add(e),localStorage.setItem("clearedLevels",JSON.stringify(Array.from(s)))}createNextLevelBtn(e,t){this.container.add(new p(e,t,"Next Level",300,50,this.scene,(()=>{this.scene.scene.start("LoadingGame",this.nextLevelData)})).container)}findNextLevel(){const e=this.scene.gameStates.levelKey,[t,s,i]=e.split(".");if(!t||!s||!i)return!1;const n=this.scene.cache.json.get("levels"),o=n.findIndex((e=>e.folderName===t)),a=n[o],r=a.categories.findIndex((e=>e.categoryName===s)),c=a.categories[r].levels.length;let l=o,h=r,d=Number(i)-1;if(d<c-1?d++:(d=0,h++),a.categories[h]||(h=0,l++),!n[l])return!1;const g=n[l],u=g.categories[h],m=`${g.folderName}.${g.categories[h].categoryName}.${d+1}`;return this.nextLevelData={mode:"Play",levelKey:m,levelData:u.levels[d]},!0}}class v extends s.Scene{constructor(){super("Game"),t(this,"grid"),t(this,"colorSelectionButtons"),t(this,"btnContainer"),t(this,"gameStates"),t(this,"turnCounter"),t(this,"selectionBox"),t(this,"startTime"),t(this,"colors")}preload(){}create({mode:e,levelKey:t,levelData:s}){const o=this.cameras.main.width,a=this.cameras.main.height,{colors:r}=this.cache.json.get("config");this.colors=r,this.add.shader("distortion",o/2,a/2,o,a,["background"]),function(e,t){const s=e.shader.get("base"),{shaders:i}=e.json.get("config");s.uniforms={...i.base.init,screenResolution:{type:"2f",value:t}}}(this.cache,{x:o,y:a}),function(e,t,s,o){const a={levelKey:o,turns:s.turns,targetColor:s.targetColor,selectedColor:i.red,availableColors:new Set,state:n.Active,remains:0,mode:t,initialState:{turns:s.turns,remains:0}};e.gameStates=a,e.grid=new h(e,s.board),e.colorSelectionButtons=[],e.btnContainer=e.add.container(1500,400,[])}(this,e,s,t),"Editor"===e&&(this.selectionBox=new x(this.grid.board,this)),function(e){const{game:{ui:t}}=e.cache.json.get("config");"Editor"==e.gameStates.mode&&function(e,t){e.make.text({x:60,y:110,text:"Moves count:",style:{color:"#fff",font:"22px OpenSans_Regular"}}),e.make.text({x:60,y:200,text:"Target color:",style:{color:"#fff",font:"22px OpenSans_Regular"}}),new u(e,t.turnsValueSelector.x,t.turnsValueSelector.y,t.turnsValueSelector.width,e.gameStates.turns,(()=>(e.gameStates.turns=Math.max(1,e.gameStates.turns-1),e.gameStates.turns)),(()=>(e.gameStates.turns=Math.min(50,e.gameStates.turns+1),e.gameStates.turns))),new f(e),new u(e,t.targetValueSelector.x,t.targetValueSelector.y,t.targetValueSelector.width,l(e.gameStates.targetColor),(()=>S(-1,e)),(()=>S(1,e)))}(e,t),"Play"==e.gameStates.mode&&function(e,t){const s=e.colors,n=e.make.text({x:60,y:110,text:"Remaining Moves:",style:{color:"#fff",font:"22px OpenSans_Regular"}});e.turnCounter=e.make.text({x:60+n.width+5,y:105,text:`${e.gameStates.turns}`,style:{color:"#ffcd3f",font:"26px OpenSans_ExtraBold"}});const o=e.make.text({x:t.targetUI.x,y:t.targetUI.y,text:"Turn all the blocks into",style:{color:"#cbcbcc",font:"30px OpenSans_Regular"}}),a=i[e.gameStates.targetColor];e.make.text({x:o.x+o.width+5,y:t.targetUI.y,text:`${a[0].toUpperCase()}${a.slice(1)}`,style:{color:`rgb(${255*s[e.gameStates.targetColor].x},${255*s[e.gameStates.targetColor].y},${255*s[e.gameStates.targetColor].z} )`,font:"30px OpenSans_Regular"}})}(e,t);const s=e.add.image(60,50,"uiatlas","icon").setScale(.5).setOrigin(0);e.make.text({x:s.x+50,y:s.y,text:"Overflowing Palette "+("Editor"===e.gameStates.mode?"| Mode:Editor":""),style:{color:"#ab9c6b",font:"26px OpenSans_Bold"}});let n=[0,30,-20,0,20,0];e.add.triangle(t.targetUI.x-45,t.targetUI.y+15,...n,16777215),e.add.triangle(t.targetUI.x-5,t.targetUI.y+15,...n,9733196),n=[80,0,25,-15,0,15,0,9733196],e.add.triangle(e.btnContainer.x-10,...n),e.add.triangle(e.btnContainer.x+20,...n),n=[0,-20,-10,0,10,0,16777215,.2],e.add.triangle(e.btnContainer.x+10,e.cameras.main.height-240,...n),e.add.triangle(e.btnContainer.x+10,e.cameras.main.height-220,...n)}(this),this.initButtons(),this.startTime=this.time.now}changeGameState(e){e===n.Waiting&&(this.gameStates.turns=Math.max(0,this.gameStates.turns-1),this.turnCounter.text=String(this.gameStates.turns),this.gameStates.state=n.Waiting),e===n.Active&&(this.gameStates.state=n.Active,0===this.gameStates.remains?new y(430,400,this):0==this.gameStates.turns&&this.resetGame())}changeSelectedColor(e){this.gameStates.selectedColor=e,this.colorSelectionButtons.forEach((e=>e.update()))}initButtons(){const e=this,{game:{ui:t}}=e.cache.json.get("config"),s=t.colorButtons.size,{colors:i}=e.cache.json.get("config");Object.entries(i).filter((([t])=>!("Play"===e.gameStates.mode&&!e.gameStates.availableColors.has(Number(t))))).forEach((([i,n],o)=>{const a=new g(e,0,o*(s+t.colorButtons.gap),s,[Number(i),n],o+1,e.btnContainer);e.colorSelectionButtons.push(a)})),e.btnContainer.y-=80*e.colorSelectionButtons.length/2,function(e){var t;const{resetBtn:s}=e.cache.json.get("config").game.ui,i=e.add.image(e.btnContainer.x,e.cameras.main.height-140,"uiatlas","reset").setScale(.8),n=e.add.image(e.btnContainer.x,e.cameras.main.height-140,"uiatlas","reset_over").setScale(.8);n.setVisible(!1);const o=e.make.image({...s.hotkeyBtn,x:i.x-30,y:i.y+80});e.make.text({...s.hotkeyText,x:o.x,y:o.y}),e.make.text({...s.text,x:o.x+60,y:o.y});const a=null==(t=e.input.keyboard)?void 0:t.addKey("R");a&&a.on("down",e.resetGame,e),i.setInteractive(),i.on("pointerdown",(()=>{e.resetGame()})),i.on("pointerover",(()=>{n.setVisible(!0)})),i.on("pointerout",(()=>{n.setVisible(!1)}))}(this),function(e){const{game:{ui:t}}=e.cache.json.get("config"),s=e.add.image(e.cameras.main.width-t.closeBtn.offset.x,0+t.closeBtn.offset.y,"uiatlas","close").setScale(t.closeBtn.scale);s.setInteractive(),s.on("pointerdown",(()=>{e.scene.start("MainMenu")})),s.on("pointerover",(()=>{s.setScale(t.closeBtn.scale+.1)})),s.on("pointerout",(()=>{s.setScale(t.closeBtn.scale)}))}(this)}resetGame(){if(this.gameStates.state===n.Waiting)return;this.grid.resetBoard();const{initialState:e}=this.gameStates;"Play"===this.gameStates.mode&&(this.gameStates.turns=e.turns,this.gameStates.remains=e.remains,this.turnCounter.text=String(this.gameStates.turns),this.gameStates.state=n.Active)}}function S(e,t){let s=c(e,t.gameStates.targetColor);return t.gameStates.targetColor=s,t.grid.updateBorderTint(),l(s)}class b extends s.Scene{constructor(){super("Boot")}preload(){this.showLoading(),this.load.pack("assets_pack","assets/data/assets.json")}create(){this.loadUserConfig(),this.scene.start("MainMenu")}loadUserConfig(){const e=this.cache.json.get("config");this.loadShaderUserConfig(["activeOffset","lightenFactor"]);const t=localStorage.getItem("colors");t&&(e.colors={...e.colors,...JSON.parse(t)})}loadShaderUserConfig(e){const t=this.cache.json.get("config");e.forEach((e=>{const s=localStorage.getItem(`shader.${e}`);s&&(t.shaders.base.init={...t.shaders.base.init,[e]:JSON.parse(s)})}))}showLoading(e=w){const t=this,s=this.load,i=t.add.graphics(),n=t.add.graphics(),o=t.cameras.main.width,a=t.cameras.main.height;n.fillStyle(2236962,.7),n.fillRect(o/2-(e.width+e.boxPadding)/2,a/2-(e.height+e.boxPadding)/2,e.width+e.boxPadding,e.height+e.boxPadding);const r=t.make.text({x:o/2,y:a/2-e.height-e.boxPadding,text:"Loading...",style:{font:"20px monospace",color:"#ffffff"}});r.setOrigin(.5,.5);const c=t.make.text({x:o/2,y:a/2,text:"0%",style:{font:"18px monospace",color:"#ffffff"}});c.setOrigin(.5,.5);const l=t.make.text({x:o/2,y:a/2+e.height+e.boxPadding,text:"",style:{font:"18px monospace",color:"#ffffff"}});l.setOrigin(.5,.5),s.on("progress",(function(t){i.clear(),i.fillStyle(16777215,1),i.fillRect(o/2-e.width/2,a/2-e.height/2,e.width*t,e.height),c.setText(100*t+" %")})),s.on("fileprogress",(function(e){l.setText(`Loading asset: ${e.src}`)})),s.on("complete",(function(){i.destroy(),n.destroy(),r.destroy(),c.destroy(),l.destroy()}))}}const w={width:300,boxPadding:10,height:30};class B extends m{constructor(e,s,i,n,o){var a;super(s,i,e),t(this,"btn"),t(this,"overlay"),t(this,"text"),t(this,"isActive");const r=this.container,{menuBtn:c}=e.cache.json.get("config").mainMenu;this.btn=e.add.image(c.btn.offset,0,"uiatlas","menuBtn").setOrigin(0,.5),this.text=e.make.text({...c.text,text:n}).setOrigin(0,.5),this.overlay=e.add.image(this.btn.x,this.btn.y,"uiatlas","menuBtn_overlay").setOrigin(0,.5),null==(a=this.overlay.preFX)||a.addBloom(16777215,1,1,1.5),this.overlay.setVisible(!1),this.btn.setInteractive(),this.btn.on("pointerdown",o,this),this.btn.on("pointerover",this.onEnter,this),this.btn.on("pointerout",this.onLeave,this),r.add(this.btn),r.add(this.overlay),r.add(this.text),this.container=r}setActive(e){this.isActive=e}onEnter(){this.overlay.setVisible(!0),this.scene.input.setDefaultCursor("pointer"),this.text.setColor("#ffffff")}onLeave(){this.overlay.setVisible(!1),this.scene.input.setDefaultCursor("default"),this.text.setColor("#a4a4a4")}}class C extends m{constructor({key:e,x:s,y:i,scene:n,width:o,height:a}){super(s,i,n),t(this,"key"),t(this,"content"),t(this,"width"),t(this,"height"),t(this,"defaultPos"),t(this,"actionBtn"),this.key=e,this.content=n.add.container(0,0),this.defaultPos={x:s,y:i},this.width=o,this.height=a,this.container.setVisible(!1),this.container.add(this.content),this.container.add(n.add.rectangle(0,0,o,a,0,.6).setOrigin(0,0));const r=n.add.rectangle(s,i,o,a,16777215).setOrigin(0,0).setVisible(!1).createGeometryMask();this.content.setMask(r),this.actionBtn=new p(o-180,a+50,"Start",350,0,n),this.actionBtn.container.setScale(1.5),this.container.add(this.actionBtn.container)}show(){this.container.visible||(this.container.setVisible(!0),this.scene.tweens.add({duration:300,targets:this.container,x:{from:this.defaultPos.x-100,to:this.defaultPos.x},alpha:{from:0,to:1},yoyo:!1}))}hide(e){const t=this.container.x;this.scene.tweens.add({duration:e?0:300,targets:this.container,x:{from:this.defaultPos.x,to:this.defaultPos.x-100},alpha:{from:1,to:0},onComplete:()=>{this.container.setVisible(!1),this.container.setX(t)}})}}class O extends m{constructor(e,s,i,n,o,a){super(e,s,a),t(this,"previewBlock"),t(this,"levelInfo"),t(this,"emptyBlock"),t(this,"actionBtn"),t(this,"width"),this.width=i;const{selectedLevelInfo:r}=a.cache.json.get("config").mainMenu.levelSelection;this.container.add([a.add.rectangle(0,0,i,n,0,.6).setOrigin(0,0),a.add.rectangle(0,0,i,45,0,1).setOrigin(0,0),a.make.text({x:i/2,y:0,text:"Preview",style:{color:"#fff",font:"32px OpenSans_Bold"}}).setOrigin(.5,0)]),this.emptyBlock=a.make.text({...r.emptyText,x:i/2}).setOrigin(.5,0),this.previewBlock=new k(0,40,a),this.levelInfo=new L(20,40,a),this.container.add([this.emptyBlock,this.levelInfo.container,this.previewBlock.container]),this.actionBtn=o,o.container.setPosition(i/2+70,n-50),o.container.parentContainer.remove(o.container),o.container.setScale(1),this.container.add(o.container),o.hide(),this.previewBlock.hide(),this.levelInfo.hide()}updateInfo(e,t){if(!e)return this.actionBtn.hide(),this.previewBlock.hide(),this.levelInfo.hide(),void this.emptyBlock.setVisible(!0);this.actionBtn.container.setVisible(!0),this.levelInfo.update(String(e.turns),e.targetColor),this.levelInfo.container.setVisible(!0),this.previewBlock.updatePreview(e.board),this.previewBlock.container.setVisible(!0),this.actionBtn.btn.on("pointerdown",(()=>{this.scene.scene.start("LoadingGame",{mode:"Play",levelKey:t,levelData:e})})),this.emptyBlock.setVisible(!1)}}class k extends m{constructor(e,s,i){super(e,s,i),t(this,"graphics"),this.graphics=i.add.graphics(),this.container.add(this.graphics)}updatePreview(e){const{selectedLevelInfo:t}=this.scene.cache.json.get("config").mainMenu.levelSelection,{colors:s}=this.scene.cache.json.get("config"),i=e.length,n=e[0].length,o=n*t.previewBlock.cellSize,a=i*t.previewBlock.cellSize,c=t.previewBlock.width/o,l=t.previewBlock.height/a,h=Math.min(c,l),d=this.graphics;d.setScale(h),this.container.setPosition((t.previewBlock.width-o*h)/2,this.container.y),d.clear();for(let g=0;g<i;g++)for(let t=0;t<n;t++){const i=s[e[g][t]];d.fillStyle(r(i)),d.fillRect(50*t,50*g,50,50)}}}class L extends m{constructor(e,s,i){super(e,s,i),t(this,"turnsText"),t(this,"tartgetColorText");const{selectedLevelInfo:n}=i.cache.json.get("config").mainMenu.levelSelection;this.container=i.add.container(n.infoBlock.x,n.infoBlock.y),this.container.add(i.add.rectangle(0,-10,n.infoBlock.width,n.infoBlock.height,0,1).setOrigin(0,0));const o=i.make.text({...n.targetColorTextOffset,text:"Target color:",style:n.defaultStyle});this.tartgetColorText=i.make.text({x:n.infoBlock.width-n.targetColorTextOffset.x,y:o.y,text:"No color",style:n.defaultStyle}).setOrigin(1,0);const a=i.make.text({...n.turnsTextOffset,text:"Turns:",style:n.defaultStyle});this.turnsText=i.make.text({x:n.infoBlock.width-n.turnsTextOffset.x,y:a.y,text:"0",style:{...n.defaultStyle,color:"#ffcd3f"}}).setOrigin(1,0),this.container.add([this.tartgetColorText,this.turnsText,o,a])}update(e,t){this.tartgetColorText.setText(`${i[t]}`);const{colors:s}=this.scene.cache.json.get("config"),{x:n,y:o,z:a}=s[t];this.tartgetColorText.setColor(Phaser.Display.Color.RGBToString(255*n,255*o,255*a)),this.turnsText.setText(e)}}class T extends m{constructor(e){super(0,0,e),t(this,"viewBox"),t(this,"applyBtn")}render(){const e=this.scene;this.viewBox=e.add.dom(e.cameras.main.width/2,e.cameras.main.height/2-100,"TextArea",{width:"500px",height:"200px",background:"#121212",fontSize:"24px",padding:"10px",overflow:"auto"}),this.applyBtn=new p(e.cameras.main.width/2,e.cameras.main.height/2+50,"Apply",600,50,e,(()=>{const e=this.viewBox.node;this.parseString(e.value)})),this.applyBtn.container.setScale(1.2),this.container.add([this.applyBtn.container,this.viewBox])}parseString(e){try{const t=JSON.parse(atob(e));if(!("turns"in t)||!("board"in t))return;this.scene.scene.start("LoadingGame",{mode:"Play",levelData:t})}catch(t){console.error("catch"),this.hide()}}hide(){super.hide(),this.viewBox.node.value=""}}class E extends C{constructor(e){super(e),t(this,"selectedLevelData"),t(this,"selectedFolder"),t(this,"selectedLevelInfo"),t(this,"levelsList"),t(this,"clearedLevels");const{x:s,y:i,scene:n,width:o,height:a}=e;this.levelsList=n.add.dom(0,0,"div",{width:`${o}px`,height:`${a}px`,fontSize:"24px",overflow:"auto"}).setOrigin(0,0),this.levelsList.node.id="boxid",this.container.add(this.levelsList);const r=document.createElement("div");this.selectedLevelInfo=new O(s+o,i,n.cameras.main.width-s-o-10,a,this.actionBtn,n),this.selectedLevelInfo.container.add(new p(80,this.actionBtn.container.y,"Back",200,0,n,(()=>{this.showFolders(),this.selectedLevelInfo.hide()})).container),this.levelsList.node.append(r),this.levelsList.node.id="boxid",this.selectedLevelInfo.hide(),this.showFolders()}showSelectedFolder(e){if(!this.scene.cache.json.get("levels"))return;this.levelsList.node.replaceChildren(),this.selectedFolder=e.folderName,this.selectedLevelInfo.show();const t=localStorage.getItem("clearedLevels");let s;if(t){const e=JSON.parse(t);s=new Set(e)}else s=new Set;this.clearedLevels=s;for(const i of e.categories)this.levelsList.node.append(this.createCategory(i))}showFolders(){const e=this.scene.cache.json.get("levels");if(!e)return;this.levelsList.node.replaceChildren();for(const s of e)this.levelsList.node.append(this.createFolderBtn(s.folderName,s));const t=this.createBtn("Import");t.addEventListener("click",(()=>{new T(this.scene).render()})),this.levelsList.node.append(t)}createLvlBtn(e,t,s){const i=this.createBtn(e);return s&&this.clearedLevels.has(s)&&i.classList.add("cleared"),i.addEventListener("click",(()=>{this.selectedLevelInfo.updateInfo(t,s)})),i}createFolderBtn(e,t){const s=this.createBtn(e);return s.addEventListener("click",(()=>{this.showSelectedFolder(t)})),s}createBtn(e){const t=document.createElement("div"),s=document.createElement("div");return s.innerText=e,s.classList.add("text"),t.classList.add("level-card"),t.append(s),t}createCategory(e){const t=document.createElement("div"),s=document.createElement("h3");s.classList.add("folder-text"),s.innerText=e.categoryName,t.append(s);const i=document.createElement("div");return i.classList.add("container"),e.levels.forEach(((t,s)=>{i.append(this.createLvlBtn(String(s+1),t,`${this.selectedFolder}.${e.categoryName}.${s+1}`))})),t.append(i),t.classList.add("folder"),t}show(){super.show(),this.showFolders()}hide(e){super.hide(),this.selectedLevelInfo.hide(),this.selectedLevelInfo.updateInfo(void 0)}}class P extends C{constructor(e){super(e),t(this,"selectedFillColor",0),t(this,"rows",8),t(this,"columns",10);const{scene:s,width:i,height:n}=e,{levelEditor:o}=s.cache.json.get("config").mainMenu;this.actionBtn.btn.setInteractive(),this.actionBtn.btn.on("pointerdown",(()=>{this.scene.scene.start("LoadingGame",{mode:"Editor",levelData:{board:this.generateField(this.rows,this.columns,this.selectedFillColor),targetColor:0,turns:1}})}));const a=s.make.text({x:100,y:120,text:"Columns:",style:o.defaultStyle}).setOrigin(0,.5),r=new u(s,400,a.y,200,this.columns,(()=>(this.columns=Phaser.Math.Clamp(this.columns-1,2,100),this.columns)),(()=>(this.columns=Phaser.Math.Clamp(this.columns+1,2,100),this.columns))),c=s.make.text({x:100,y:50,text:"Rows:",style:o.defaultStyle}).setOrigin(0,.5),h=new u(s,400,c.y,200,this.rows,(()=>(this.rows=Phaser.Math.Clamp(this.rows-1,2,100),this.rows)),(()=>(this.rows=Phaser.Math.Clamp(this.rows+1,2,100),this.rows))),d=s.make.text({x:100,y:190,text:"Fill color ",style:o.defaultStyle}).setOrigin(0,.5),g=new u(s,400,d.y,200,l(this.selectedFillColor),(()=>I(-1,this)),(()=>I(1,this)));this.container.add([c,h.container,a,r.container,d,g.container])}generateField(e,t,s){const i=[];for(let n=0;n<e;n++){i[n]??(i[n]=[]);for(let e=0;e<t;e++)i[n][e]=s}return i}}function I(e,t){let s=c(e,t.selectedFillColor);return t.selectedFillColor=s,l(s)}class M extends C{constructor(e){super(e),t(this,"viewBox"),t(this,"localCache"),t(this,"inputs",[]),t(this,"isSimpleColors"),t(this,"strongerHighlight");const s=this.scene,{colors:i}=s.cache.json.get("config");this.actionBtn.text.setText("Save"),this.actionBtn.container.setScale(1),this.actionBtn.container.setPosition(e.width/2+175,e.height+25),this.actionBtn.btn.on("pointerdown",this.save,this);const n=new p(e.width/2-25,this.actionBtn.container.y,"Reset",200,0,s,this.reset,this);this.viewBox=s.add.dom(0,0,"div",{width:`${e.width}px`,height:`${e.height}px`,fontSize:"24px",overflow:"auto"}).setOrigin(0);const o=document.createElement("div"),a=document.createElement("div");a.classList.add("colors-container");const r=document.createElement("p");r.textContent="After any changes (save/reset) refresh game",r.style="color:#fff;",r.classList.add("options-text"),o.append(r),this.addText("Colors",o,"category"),o.append(a),this.addText("Grid",o,"category"),o.classList.add("menu-options"),this.viewBox.node.append(o),this.container.add([this.viewBox,n.container]),Object.entries(i).forEach((e=>{const t=document.createElement("input");t.setAttribute("type","color"),this.inputs.push(t),t.value="#ffffff",a.append(t)})),this.isSimpleColors=this.addCheckbox("Simple colors",o,"shader.lightenFactor"),this.strongerHighlight=this.addCheckbox("Stronger higlight",o,"shader.activeOffset")}addText(e,t,s){const i=document.createElement("p");i.textContent=e,s&&i.classList.add(s),t.append(i)}addCheckbox(e,t,s){const i=document.createElement("div");i.style="display:flex;justify-content:space-between;align-items:center;padding:1rem;",this.addText(e,i);const n=document.createElement("input");return localStorage.getItem(s)&&(n.checked=!0),i.append(n),n.setAttribute("type","checkbox"),t.append(i),n}show(){super.show(),this.update()}update(){const{colors:e}=this.scene.cache.json.get("config");this.localCache=e,this.inputs.forEach(((e,t)=>{const s=this.localCache[t],i=Phaser.Display.Color.RGBToString(255*s.x,255*s.y,255*s.z);e.style.background=i,e.value=i}))}reset(){Object.keys(localStorage).forEach((e=>{"clearedLevels"!==e&&localStorage.removeItem(e)})),this.hide()}save(){const e={};this.inputs.forEach(((t,s)=>{const i=Phaser.Display.Color.HexStringToColor(t.value);e[s]={x:i.red/255,y:i.green/255,z:i.blue/255}})),this.isSimpleColors.checked?localStorage.setItem("shader.lightenFactor",JSON.stringify({type:"1f",value:1})):localStorage.removeItem("shader.lightenFactor"),this.strongerHighlight.checked?localStorage.setItem("shader.activeOffset",JSON.stringify({type:"2f",value:{x:0,y:.7}})):localStorage.removeItem("shader.activeOffset"),localStorage.setItem("colors",JSON.stringify(e)),this.hide()}}const N=["LevelEditor","LevelSelector","Options"];class V extends s.Scene{constructor(){super("MainMenu"),t(this,"activeTab"),t(this,"tabs",new Map)}preload(){}create(){this.createBackground(),this.makeMenuBtns();const e=new E({x:500,y:100,scene:this,width:1e3,height:800,key:"LevelSelector"}),t=new P({x:500,y:100,scene:this,width:600,height:600,key:"LevelEditor"}),s=new M({x:500,y:100,scene:this,width:600,height:600,key:"Options"});this.tabs.set("LevelSelector",e),this.tabs.set("LevelEditor",t),this.tabs.set("Options",s)}createBackground(){const e=this.cameras.main.width,t=this.cameras.main.height;if(this.add.shader("distortion",e/2,t/2,e,t,["background"]),!this.textures.exists("gradient")){const s=this.textures.createCanvas("gradient",800,t);if(s){const i=s.getContext(),n=i.createLinearGradient(0,0,800,0);n.addColorStop(.3,"black"),n.addColorStop(1,"rgba(0, 0, 0, 0)"),i.fillStyle=n,i.fillRect(0,0,e,t),s.refresh()}}this.add.image(0,0,"gradient").setOrigin(0);const s=this.add.graphics();s.fillStyle(1447446,1),s.lineStyle(4,4473924,.6),s.lineBetween(50,0,50,this.cameras.main.height)}makeMenuBtns(){const e=this.cache.json.get("config").mainMenu.buttonsBlock,t=this.add.container(e.x,e.y),s=100+e.gap,i=this.createButton(0,0,"Select Level","LevelSelector").container,n=this.createButton(0,s,"Create Level","LevelEditor").container,o=this.createButton(0,2*s,"Options","Options").container,a=this.createButton(0,this.cameras.main.height-300,"Open Docs (GitHub)","Git");a.btn.on("pointerdown",(()=>{window.open("https://github.com/XirTelan/overflowing_palette","GitHubProject")})),a.text.setFontSize(24),t.add([i,n,o,a.container])}createButton(e,t,s,i){return new B(this,e,t,s,(()=>{N.forEach((e=>{const t=this.tabs.get(e);t&&(i!=e||t.container.visible?t.hide():t.show())}))}))}}class j extends Phaser.Scene{constructor(){super("LoadingGame")}create(e){this.add.text(this.cameras.main.width/2,this.cameras.main.height/2,"Loading...",{fontSize:"32px",color:"#fff"}).setOrigin(.5),this.time.delayedCall(100,(()=>{this.scene.start("Game",e)}))}}const U={type:s.AUTO,width:1920,height:1080,parent:"game-container",backgroundColor:"#121212",dom:{createContainer:!0},scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH},scene:[b,V,j,v]},D=new Phaser.Game(U);document.addEventListener("DOMContentLoaded",(()=>{D.scene.start("Boot")}));
